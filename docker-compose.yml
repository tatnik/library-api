services:
  db:
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - .data/postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    build: .
    working_dir: /code
    depends_on:
      db:
        condition: service_healthy
    command: bash -c "alembic -c alembic.ini upgrade head && tail -f /dev/null"
    volumes:
      - .:/code
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "echo ok"]
      interval: 10s
      timeout: 5s
      retries: 3
      
  api:
    build: .
    working_dir: /code
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --reload

  adminer:
    image: adminer
    ports:
      - "8080:8080"      

volumes:
  postgres:
